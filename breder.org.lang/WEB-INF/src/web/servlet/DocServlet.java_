package web.servlet;

import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import breder.util.util.InputStreamUtil;
import breder.xml.DynamicXmlReader;
import breder.xml.ITag;
import breder.xml.XmlReader;

public abstract class DocServlet extends HttpServlet {

	private final Map<String, byte[]> map = new HashMap<String, byte[]>();

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		String id = req.getParameter("id");
		if (id == null) {
			id = "index";
		}
		byte[] content = this.map.get(id);
		if (content == null) {
			content = this.buildContent(req, id);
		}
		InputStreamUtil.copyStream(new ByteArrayInputStream(content), resp.getOutputStream());
	}

	private byte[] buildContent(HttpServletRequest req, String id) {
		System.out.println("building the id = " + id);
		InputStream input = this.findId(new File(new File(new File("webapps", req.getContextPath().substring(1)), "WEB-INF"), "xml"), id);
		if (input != null) {
			try {
				StringBuilder sb = new StringBuilder();
				sb.append("<%@ taglib uri='http://java.sun.com/jsp/jstl/core' prefix='c' %>\n");
				sb.append("<c:import url='header.jsp'></c:import>\n");
				DynamicXmlReader reader = new DynamicXmlReader(input);
				reader.start();
				ITag documentTag = reader.getTag("document");
				for (ITag indexTag : documentTag.getTags("index")) {
					sb.append("<h2>");
					sb.append(indexTag.get("text"));
					sb.append("</h2>\n");
					sb.append("<h3>");
					sb.append(indexTag.getContent().getText());
					sb.append("</h3>\n");
					sb.append("<hr\n");
				}
				sb.append("<c:import url='tail.jsp'></c:import>\n");
				this.map.put(id, sb.toString().getBytes());
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		return "Page not found".getBytes();
	}

	private InputStream findId(File dir, String id) {
		System.out.println(dir.getAbsolutePath());
		for (File file : dir.listFiles()) {
			try {
				XmlReader reader = new XmlReader(new FileInputStream(file));
				reader.start();
				ITag tag = reader.getTag("document");
				String pack = tag.get("package");
				if (pack != null && pack.equals(id)) {
					return new FileInputStream(file);
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		return null;
	}

}
